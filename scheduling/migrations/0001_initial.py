# Generated by Django 5.2.3 on 2025-07-15 08:05

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Import',
            fields=[
                ('importId', models.AutoField(primary_key=True, serialize=False)),
                ('studentId', models.CharField(max_length=20)),
                ('subjectId', models.IntegerField()),
                ('sectionCode', models.CharField(blank=True, max_length=10, null=True)),
                ('firstName', models.CharField(max_length=50)),
                ('lastName', models.CharField(max_length=50)),
                ('middleInitial', models.CharField(blank=True, max_length=5, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processed', 'Processed'), ('failed', 'Failed')], max_length=20)),
                ('importedAt', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('roomId', models.AutoField(primary_key=True, serialize=False)),
                ('roomCode', models.CharField(max_length=20)),
                ('building', models.CharField(max_length=100)),
                ('capacity', models.IntegerField()),
                ('type', models.CharField(max_length=50)),
                ('isActive', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('sectionId', models.AutoField(primary_key=True, serialize=False)),
                ('sectionCode', models.CharField(max_length=10)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('semesterId', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('academicYear', models.CharField(max_length=20)),
                ('term', models.CharField(choices=[('1st', '1st'), ('2nd', '2nd'), ('Summer', 'Summer')], max_length=10)),
                ('isActive', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('subjectId', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('units', models.IntegerField()),
                ('defaultTerm', models.CharField(choices=[('1st', '1st'), ('2nd', '2nd'), ('Summer', 'Summer')], max_length=10)),
                ('yearLevel', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10)),
                ('durationMinutes', models.IntegerField()),
                ('hasLabComponent', models.BooleanField(default=False)),
                ('labDurationMinutes', models.IntegerField(blank=True, null=True)),
                ('preferredDeliveryMode', models.CharField(choices=[('f2f', 'f2f'), ('online', 'online'), ('hybrid', 'hybrid')], max_length=10)),
                ('labDeliveryMode', models.CharField(blank=True, choices=[('f2f', 'f2f'), ('online', 'online'), ('hybrid', 'hybrid')], max_length=10, null=True)),
                ('requiredRoomType', models.CharField(blank=True, max_length=50, null=True)),
                ('requiredLabRoomType', models.CharField(blank=True, max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('isActive', models.BooleanField(default=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('scheduleId', models.AutoField(primary_key=True, serialize=False)),
                ('dayOfWeek', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday')], max_length=10)),
                ('startTime', models.TimeField()),
                ('endTime', models.TimeField()),
                ('scheduleType', models.CharField(choices=[('lecture', 'Lecture'), ('lab', 'Lab')], max_length=10)),
                ('isOvertime', models.BooleanField(default=False)),
                ('scheduleStatus', models.CharField(choices=[('draft', 'Draft'), ('final', 'Final'), ('archived', 'Archived')], max_length=20)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.instructor')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='scheduling.room')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.section')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.semester')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('generating', 'Generating'), ('pendingApproval', 'Pending Approval'), ('finalized', 'Finalized')], max_length=30)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.schedule')),
                ('updatedBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='section',
            name='semester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.semester'),
        ),
        migrations.CreateModel(
            name='GenEdSchedule',
            fields=[
                ('genedScheduleId', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=20)),
                ('subjectName', models.CharField(max_length=100)),
                ('sectionCode', models.CharField(max_length=10)),
                ('instructorName', models.CharField(blank=True, max_length=100, null=True)),
                ('dayOfWeek', models.CharField(max_length=10)),
                ('startTime', models.TimeField()),
                ('endTime', models.TimeField()),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.semester')),
            ],
        ),
        migrations.AddField(
            model_name='section',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.subject'),
        ),
        migrations.CreateModel(
            name='InstructorSubjectMatchHistory',
            fields=[
                ('matchId', models.AutoField(primary_key=True, serialize=False)),
                ('confidenceScore', models.FloatField()),
                ('primaryFactor', models.CharField(max_length=50)),
                ('experienceScore', models.FloatField()),
                ('teachingScore', models.FloatField()),
                ('credentialScore', models.FloatField()),
                ('availabilityScore', models.FloatField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('generatedAt', models.DateTimeField(auto_now_add=True)),
                ('generatedBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.instructor')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.subject')),
            ],
        ),
        migrations.CreateModel(
            name='InstructorSubjectMatch',
            fields=[
                ('matchId', models.AutoField(primary_key=True, serialize=False)),
                ('confidenceScore', models.FloatField()),
                ('primaryFactor', models.CharField(max_length=50)),
                ('experienceScore', models.FloatField()),
                ('teachingScore', models.FloatField()),
                ('credentialScore', models.FloatField()),
                ('availabilityScore', models.FloatField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('generatedAt', models.DateTimeField(auto_now_add=True)),
                ('generatedBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.instructor')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('enrollmentId', models.AutoField(primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.student')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.section')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.subject')),
            ],
        ),
        migrations.CreateModel(
            name='SubjectOffering',
            fields=[
                ('offerId', models.AutoField(primary_key=True, serialize=False)),
                ('sectionCode', models.CharField(max_length=10)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.instructorsubjectmatch')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.semester')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.subject')),
            ],
        ),
        migrations.AddField(
            model_name='schedule',
            name='offer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.subjectoffering'),
        ),
    ]
